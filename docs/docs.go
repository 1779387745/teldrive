// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Log in to the application with Telegram session details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in to the application",
                "parameters": [
                    {
                        "description": "Telegram Session Details",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.TgSession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Log out from the application and invalidate the session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out from the application",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/session": {
            "get": {
                "description": "Get detailed information about the user's session.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user session information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Session"
                        }
                    }
                }
            }
        },
        "/uploads/parts": {
            "post": {
                "description": "Create a new upload part for a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uploads"
                ],
                "summary": "Create a new upload part",
                "parameters": [
                    {
                        "description": "Upload Part",
                        "name": "part",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UploadPart"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.UploadPartOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/uploads/{id}": {
            "get": {
                "description": "Get details of an uploaded file by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uploads"
                ],
                "summary": "Get information about an uploaded file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Upload ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UploadOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a file in parts to a channel",
                "consumes": [
                    "application/octet-stream"
                ],
                "tags": [
                    "uploads"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Upload ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File Name",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Channel ID",
                        "name": "channelId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Part Number",
                        "name": "partNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Total Parts",
                        "name": "totalParts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.UploadPartOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an uploaded file by its ID",
                "tags": [
                    "uploads"
                ],
                "summary": "Delete an uploaded file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Upload ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/bots": {
            "post": {
                "description": "Add bots to the authenticated user's default channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add bots to user's channel",
                "parameters": [
                    {
                        "description": "Bot Tokens",
                        "name": "botsTokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove bots from the authenticated user's default channel",
                "tags": [
                    "users"
                ],
                "summary": "Remove bots from user's channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/bots/session": {
            "delete": {
                "description": "Revoke all bot sessions associated with the authenticated user",
                "tags": [
                    "users"
                ],
                "summary": "Revoke user's bot session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/bots/{channelId}": {
            "get": {
                "description": "Get the list of bots associated with the authenticated user and a specific channel",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user's bots for a channel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Channel ID",
                        "name": "channelId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bot Tokens",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/channel": {
            "put": {
                "description": "Update the selected channel for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user's selected channel",
                "parameters": [
                    {
                        "description": "Update Channel",
                        "name": "channel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Channel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/channels": {
            "get": {
                "description": "Get the list of channels associated with the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List user's channels",
                "responses": {
                    "200": {
                        "description": "Channel List",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.Channel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/stats": {
            "get": {
                "description": "Get statistics related to the authenticated user's account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user's account statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AccountStats"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "schemas.AccountStats": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "integer"
                },
                "channelName": {
                    "type": "string"
                },
                "totalFiles": {
                    "type": "integer"
                },
                "totalSize": {
                    "type": "integer"
                }
            }
        },
        "schemas.Channel": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "integer"
                },
                "channelName": {
                    "type": "string"
                }
            }
        },
        "schemas.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.Session": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "isPremium": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "schemas.TgSession": {
            "type": "object",
            "properties": {
                "bot": {
                    "type": "boolean"
                },
                "isPremium": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "session": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "schemas.UploadOut": {
            "type": "object",
            "properties": {
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UploadPartOut"
                    }
                }
            }
        },
        "schemas.UploadPart": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "partId": {
                    "type": "integer"
                },
                "partNo": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "uploadId": {
                    "type": "string"
                }
            }
        },
        "schemas.UploadPartOut": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partId": {
                    "type": "integer"
                },
                "partNo": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JwtAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
